<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.felix.infra.mapper.AccountHistoryMapper">

    <resultMap id="BaseResultMap" type="com.felix.infra.models.AccountHistory">
        <result column="accountHistoryId" property="accountHistoryId" jdbcType="BIGINT"/>
        <result column="transactionType" property="transactionType" jdbcType="VARCHAR"/>
        <result column="accountId" property="accountId" jdbcType="BIGINT"/>
        <result column="balance" property="balance" jdbcType="DECIMAL"/>
        <result column="freeze" property="freeze" jdbcType="DECIMAL"/>
        <result column="total" property="total" jdbcType="DECIMAL"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="ts" property="ts" jdbcType="BIGINT"/>
        <result column="createdTime" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="updatedTime" property="updatedTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="columns">
        accountHistoryId, transactionType, accountId, balance, freeze, total, amount, ts, createdTime, updatedTime
    </sql>

    <select id="getPage" resultMap="BaseResultMap">
        select <include refid="columns"/> from accountHistory
        where accountId = #{accountId}
        <if test="startTs != null">
            and ts >= #{startTs}
        </if>
        <if test="endTs != null">
            <![CDATA[and ts < #{endTs}]]>
        </if>
        <if test="from != null">
            <choose>
                <when test="direct == 'next'">
                    <![CDATA[and accountHistoryId >= #{from}]]>
                    order by accountHistoryId asc
                </when>
                <when test="direct == 'prev'">
                    <![CDATA[and accountHistoryId <= #{from}]]>
                    order by accountHistoryId desc
                </when>
            </choose>
        </if>
        <if test="from == null">
            order by accountHistoryId asc
        </if>
        limit #{size}
    </select>

    <insert id="save" parameterType="com.felix.infra.models.Account">
        insert into accountHistory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            accountHistoryId, transactionType, accountId, balance, freeze, total, amount, ts
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            #{accountHistoryId}, #{transactionType}, #{accountId}, #{balance}, #{freeze}, #{total}, #{amount}, #{ts}
        </trim>
    </insert>




</mapper>